---
import type Feature from "../interfaces/feature";

interface Props {
  feature: Feature;
}

const { feature } = Astro.props;
---

<div
  class="flex flex-col lg:flex-row w-full bg-white dark:bg-zinc-800 rounded-lg border-2 border-orange-200 dark:border-main transition-transform duration-300 md:hover:scale-[101%] hover:shadow-sm overflow-hidden min-h-[60vh] lg:min-h-[80vh] mb-8"
>
  <div
    class="flex flex-col justify-center items-center lg:items-start w-full lg:w-1/2 p-12 lg:p-16"
  >
    <div class="text-5xl sm:text-4xl mb-6 lg:mb-8 text-orange-600 select-none">
      {feature.icon}
    </div>
    <h3
      class="text-2xl sm:text-3xl lg:text-4xl font-bold mb-3 lg:mb-2 text-zinc-800 dark:text-zinc-100 text-center lg:text-left"
    >
      {feature.title}
    </h3>
    <p
      class="text-zinc-600 dark:text-zinc-400 text-base sm:text-lg leading-relaxed text-center lg:text-left max-w-md lg:max-w-none"
    >
      {feature.description}
    </p>
  </div>
  <div
    class="w-full lg:w-1/2 bg-gradient-to-br from-orange-100 to-orange-200 dark:from-orange-900/20 dark:to-orange-800/20 flex items-center justify-center min-h-[300px] sm:min-h-[400px] lg:aspect-square"
  >
    <img
      src={typeof feature.lightImage === "string"
        ? feature.lightImage
        : feature.lightImage?.src || ""}
      alt={feature.title}
      class="w-full h-full object-cover block dark:hidden"
      loading="lazy"
    />
    <img
      src={typeof feature.darkImage === "string"
        ? feature.darkImage
        : feature.darkImage?.src || ""}
      alt={feature.title}
      class="w-full h-full object-cover hidden dark:block"
      loading="lazy"
    />
  </div>
</div>
